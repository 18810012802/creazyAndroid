package svg.jb.genemap.next.view;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

import svg.flowCal.device.model.main.Substation;
import svg.jb.genemap.next.model.DataSourceType;
import svg.jb.genemap.next.model.deviceTypes.DeviceInfo;
import svg.jb.genemap.next.service.DeviceInfoList;
import svg.jb.genemap.next.service.ParseDB;
import svg.jb.genemap.next.service.utils.ReadFromCime;

//鐢熸垚銆俿vg鏂囦欢鐨勪富绋嬪簭
public class Main {

	private static List<DeviceInfo> paramList;
	public static String filePath="c:/next.svg";
	/**
	 * 鍖椾含澶у叴 锛�211鎬婚儴锛�
	 * 鍙屾瘝鏃佽矾锛氬寳浜�-澶у叴-姘稿拰搴勭珯.cime;
	 */
	/**
	 * 涓婃捣闈欏畨
	 * 鍙屾瘝鏃佽矾锛� 涓婃捣-闈欏畨-澶х敯绔�.cime;涓婃捣-闈欏畨-浣欏绔�.cime;
	 * 鍗曟瘝鎺ョ嚎锛� 涓婃捣-闈欏畨-鍗楅槼绔�.cime;涓婃捣-闈欏畨-姹熷畞绔�.cime;涓婃捣-闈欏畨-涔屽寳绔�.cime
	 * 娣峰悎鎺ョ嚎锛� 涓婃捣-闈欏畨-甯稿痉绔�.cime;涓婃捣-闈欏畨-搴峰畾绔�.cime;涓婃捣-闈欏畨-姝﹀畾绔�.cime;涓婃捣-闈欏畨-鏂拌寕鍚嶇珯.cime;涓婃捣-闈欏畨-寤跺钩绔�.cime;涓婃捣-闈欏畨-姘告簮绔�.cime
	 * 寮�闂珯锛氫笂娴�-闈欏畨-瀹変箟绔�.cime;涓婃捣-闈欏畨-濂夎搐绔�.cime;涓婃捣-闈欏畨-璧靛绔�.cime
	 * 3/2鎺ョ嚎锛氾紙鏈疄鐜帮級涓婃捣-闈欏畨-鍗庡北绔�.cime
	 * 楂樹腑浣�3渚э細锛堟湭瀹炵幇锛変笂娴�-闈欏畨-闈欏畨绔�.cime
	 */ 
	/**
	 * 鍖椾含浜﹀簞
	 * 鍙屾瘝鏃佽矾 鍖椾含-浜﹀簞-娉板拰绔�.cime;锛堜笉鏀寔,鎺ュ湴鍙橈級鍖椾含-浜﹀簞-搴嗙緤绔�.cime;鍖椾含-浜﹀簞-鍗庡悍绔�.cime;鍖椾含-浜﹀簞-鏂囧寲鍥珯.cime
	 * 鍙屾瘝 楂樺帇姣嶇嚎涓婃湁2鍙板彉鍘嬪櫒 锛堜笉鏀寔锛� 鍖椾含-浜﹀簞-鍏翠笟绔�.cime;鍖椾含-浜﹀簞-鏅洯琛楃珯.cime
	 * 鍗曟瘝鎺ョ嚎  鍖椾含-浜﹀簞-鍗氬叴绔�.cime;鍖椾含-浜﹀簞-浜笢鏂圭珯.cime;鍖椾含-浜﹀簞-绉戝垱琛楃珯.cime;鍖椾含-浜﹀簞-浜﹀簞绔�.cime
	 */
	public static String cimeFilePath="F:\\main.cime";
//	public static String cimeFilePath = "C:\\shanghai_12_20150525.CIME";
	public static double canvasWidth=8000.0;
	public static double canvasHeight=2000.0;
	public static double adjustDistance=2150;
	public static Scanner scanner=new Scanner(System.in);
	/**
	 * @param args
	 * @throws IOException 
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//GetParamMap getParamMap = new GetParamMap();
		//ConcatDevSvgStr concatDevSvgStr = new ConcatDevSvgStr();
		//getParamMap.setDevMap();
		
		/**
		 * 鍖椾含澶у叴 锛�211鎬婚儴锛�
		 * 鍙屾瘝鏃佽矾锛氭案鍜屽簰 a4cef88c-004a-48c3-b4a7-cd865e512381
		 */
		/**
		 * 涓婃捣闈欏畨(254鏁版嵁搴�)
		 * 鍙屾瘝鏃佽矾锛� 澶х敯 ba6ed847-43f9-4077-9673-0163cae9cdb2 浣欏 75851531-40c8-4d3b-a6d7-dfd1c35dd479
		 * 鍗曟瘝鎺ョ嚎锛� 鍗楅槼 7469328c-aac4-4902-a838-fb7d1146d09a 姹熷畞 7d9bc593-dc16-433e-b1f8-5cd15545d011 涔屽寳 86c54c0c-691e-45c2-acad-ea3ca6b00077
		 * 娣峰悎鎺ョ嚎锛氾紙鍗曟瘝+鍙屾瘝锛� 甯稿痉 d8d644f9-a057-4837-869d-ff09ba995e3e 搴峰畾 6d625c2a-2575-44e9-8c6c-0f4b5373574b 姝﹀畾 c7e28837-0c30-410d-9ddb-86c30b927534
		 * 鏂拌寕鍚� 0fd7c253-6afd-4e07-9441-2ff204e67606 寤跺钩 3c761bdd-5dee-494a-9e40-418d25f725d6 姘告簮 2ff275f1-211d-4bf6-b67b-a4ecd0e4785d
		 * 寮�闂珯锛氬畨涔� 03bcdd07-d33d-4574-9d7f-633966b46037 濂夎搐 3a6cb088-8d2b-413c-b4c3-764bbba23daa 璧靛 72764138-5530-41d0-b21f-d9b6193d659d
		 * 3/2鎺ョ嚎锛氾紙鏈疄鐜帮級鍗庡北 6c567416-bcd1-4451-9801-ba4b67c64679
		 * 楂樹腑浣�3渚э細锛堟湭瀹炵幇锛夐潤瀹� 9065cd0e-04ca-4b9b-9b3a-eef5f15031d0
		 */ 
		/**
		 * 鍖椾含浜﹀簞锛�211鎬婚儴锛� 
		 * 鍙屾瘝鏃佽矾 娉板拰锛堟敮鎸� 锛�3c9e9fd8-2ab3-4c21-b1b2-606278eba033  鍗庡悍绔� 锛堟敮鎸� 锛�4e08360a-5f1a-4844-b498-e1b9e83bd51b 鏂囧寲鍥� 锛堟敮鎸� 锛�57ae45de-8e62-4c88-bff4-8231fab1608b 
		 * 鍙屾瘝 楂樺帇姣嶇嚎涓婃湁2鍙板彉鍘嬪櫒 锛堜笉鏀寔锛夊簡缇�  595881e2-d74a-407e-a2a5-1b2fa69da906  鍏翠笟绔� e16f340d-512c-41b8-863a-168775d507d5 鏅洯琛� df4dd02a-5a03-4eff-aa0e-0ea13674ec12 
		 * 鍗曟瘝鎺ョ嚎  鍗氬叴绔� 7dafeec6-6c3b-4900-8377-b784d391161b 浜笢鏂� 179c11f1-e5b7-468d-8171-3f8baf6907df 绉戝垱琛� 8d53e2a9-cf62-4dfa-a8c8-4714ccc32a17 浜﹀簞绔�  edcdd974-caf8-4ac0-9db3-1d83c43c3f5a
		 */
		//Scanner scanner=new Scanner(System.in);
		boolean develop=true;
		if(develop){
			String ids="9065cd0e-04ca-4b9b-9b3a-eef5f15031d0";
			DeviceInfoList d=null;
			try {
				d = new DeviceInfoList(DataSourceType.DATABASE,ids);
			} catch (Exception e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			StringBuilder svgStr = new StringBuilder("<?xml version='1.0' encoding='UTF-8'?><svg width='"+canvasWidth+"' height='"+canvasHeight+"'>");

			for(DeviceInfo deviceInfo : d.getDeviceInfoList()){
				String str = deviceInfo.getSvgStr();
				svgStr.append(str).append(deviceInfo.addText());
			}
			svgStr.append("</svg>");
			try {
				File f = new File(filePath);
				FileWriter fw = new FileWriter(f);
				BufferedWriter bw = new BufferedWriter(fw);
				bw.write(svgStr.toString());
				bw.close();
				fw.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		
		}else{
			ok:while(true){
				StringBuilder svgStr = new StringBuilder("<?xml version='1.0' encoding='UTF-8'?><svg width='"+canvasWidth+"' height='"+canvasHeight+"'>");

				for(DeviceInfo deviceInfo : Main.clientForList(null)){
					String str = deviceInfo.getSvgStr();
					svgStr.append(str).append(deviceInfo.addText());
				}
				svgStr.append("</svg>");
				try {
					File f = new File(filePath);
					FileWriter fw = new FileWriter(f);
					BufferedWriter bw = new BufferedWriter(fw);
					bw.write(svgStr.toString());
					bw.close();
					fw.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
				
				System.out.println("鏄惁缁х画(Y/N):");
				
				ok2:while(true){
					String line=scanner.nextLine().trim();
					if("y".equalsIgnoreCase(line)){
						System.out.println("璇疯緭鍏ュ懡浠�(濡�'help')锛�");
						while(true){
							String line2=scanner.nextLine().trim();
							if("adjust".equalsIgnoreCase(line2)||"restart".equalsIgnoreCase(line2)||"help".equalsIgnoreCase(line2)){
								paramList.removeAll(paramList);
								paramList=clientForList(line2);
								System.out.println("鏄惁缁х画(Y/N):");
								break;
							}else{
								System.out.println("鏃犳鍛戒护锛岃杈撳叆鍛戒护(濡�'help')锛�");
								continue;
							}
							
						}
					}else if("n".equalsIgnoreCase(line)){
						break ok;
					}else{
						if("adjust".equalsIgnoreCase(line)||"restart".equalsIgnoreCase(line)){
							paramList.removeAll(paramList);
							paramList=clientForList(line);
							break;
						}else{
							System.out.println("杈撳叆鏈夎锛屾槸鍚﹂渶瑕佺户缁�(Y/N)锛�");
							continue;
						}
						
					}
				}
				
				
				
				/*System.out.println("---------------------------------------------");
				paramList.removeAll(paramList);*/
			}
			scanner.close();
		}
	
	}
	
	public static List<DeviceInfo> clientForList(String command){
		int source=0;
		if(!"adjust".equalsIgnoreCase(command)&&!"help".equalsIgnoreCase(command)){
			System.out.println("璇烽�夋嫨鏁版嵁鏉ユ簮(C浠ｈ〃cime鏂囦欢,D浠ｈ〃鏁版嵁搴�):");
			while(true){
				
				String line=scanner.nextLine().trim();
				if(line.equalsIgnoreCase("C")){
					source=DataSourceType.CIME;
					break;
				}else if(line.equalsIgnoreCase("D")){
					source=DataSourceType.DATABASE;
					break;
				}else{
					System.out.println("杈撳叆鏈夎,璇烽�夋嫨鏁版嵁鏉ユ簮('C'浠ｈ〃cime鏂囦欢,'D'浠ｈ〃鏁版嵁搴�):");
				}
			}
			System.out.println("璇疯緭鍏ュ彉鐢电珯鍚嶇О鎴朓D(渚嬪'闈欏畨绔�'鎴�'9065cd0e-04ca-4b9b-9b3a-eef5f15031d0'):");
			command=null;
		}
		String line="";
		while(true){
			//Scanner scanner=new Scanner(System.in);
			
			if(command==null){
				line=scanner.nextLine().trim();
			}else{
				line=command;
				command=null;
			}
			//閲嶆柊寮�濮�
			if(line.trim().equalsIgnoreCase("help")){
				System.out.println("help:鏌ョ湅鍛戒护璇存槑");
				System.out.println("restart:鍥炲埌璧峰鎿嶄綔");
				System.out.println("adjust:璋冩暣鍙傛暟锛屾洿鏀圭敾骞呴暱搴�");
				while(true){
					System.out.println("璇疯緭鍏ュ懡浠�(濡�'help')锛�");
					String line2=scanner.nextLine().trim();
					if("adjust".equalsIgnoreCase(line2)||"restart".equalsIgnoreCase(line2)||"help".equalsIgnoreCase(line2)){
						paramList=clientForList(line2);
						return paramList;
					}else{
						System.out.println("鏃犳鍛戒护锛岃杈撳叆鍛戒护(濡�'help')锛�");
						continue;
					}
				}
			}
			//閲嶆柊寮�濮�
			if(line.trim().equalsIgnoreCase("restart")){
				paramList=clientForList(null);
				return paramList;
			}
			if(line.trim().equalsIgnoreCase("adjust")){
				while(true){
					System.out.println("褰撳墠璋冩暣鍙傛暟adjustDistance="+adjustDistance+",璇疯緭鍏ユ柊鍊硷細");
					String line2=scanner.nextLine().trim();
					try {
						adjustDistance=Integer.parseInt(line2);
						if(adjustDistance>canvasWidth||adjustDistance<100){
							System.out.println("璋冩暣鍙傛暟涓�100鑷�"+canvasWidth+"涔嬮棿鐨勪竴涓暟锛岃閲嶆柊杈撳叆锛�");
							continue;
						}else{
							System.out.println("璋冩暣鍙傛暟淇敼鎴愬姛锛屽綋鍓嶅�间负锛�"+adjustDistance);
							break;
						}
					} catch (Exception e) {
						// TODO Auto-generated catch block
						System.out.println("璋冩暣鍙傛暟涓烘暟瀛楋紝璇烽噸鏂拌緭鍏ワ細");
						continue;
					}
				}
			}
			DeviceInfoList d=null;
			if(line.contains("绔�")||(line.charAt(0)>19968 && line.charAt(0)<40623)){
				if(source==DataSourceType.CIME){
					ReadFromCime readCimeFile = new ReadFromCime();
					List<Substation> subList = null;
					try {
						subList = readCimeFile.ReadCIMEForSubs(Main.cimeFilePath, line);
					} catch (Exception e1) {
						// TODO Auto-generated catch block
						System.out.println("cime鏂囦欢璺緞涓嶅瓨鍦紒");
						break;
					}
					if(subList.size()==1){
						Substation s = subList.get(0);
						String id=s.getMRID();
						try {
							d = new DeviceInfoList(DataSourceType.CIME,id);
						} catch (Exception e) {
							// TODO Auto-generated catch block
							System.out.println("cime鏂囦欢涓棤姝ゅ悕绉板搴旂殑鍙樼數绔欎俊鎭紝璇疯緭鍏ュ彉鐢电珯鍚嶇О鎴朓D锛�");
							continue;
						}
						paramList = d.getDeviceInfoList();
						break;
					}else if(subList.size()>1){
						System.out.println("cime鏂囦欢涓湁浠ヤ笅鍙樼數绔欏閫夛細");
						List<String> keys=new ArrayList<String>();
						for(int i=0;i<subList.size();i++){
							Substation s = subList.get(i);
							System.out.println("ID="+s.getMRID()+",鍚嶇О="+s.getName()+",缂栧彿="+i);
							keys.add(s.getMRID());
						}
						
						System.out.println("璇疯緭鍏ョ紪鍙凤細");
						//Scanner scanner2=new Scanner(System.in);
						String line2=scanner.nextLine().trim();
						try {
							d = new DeviceInfoList(DataSourceType.CIME,keys.get(Integer.parseInt(line2)));
						} catch (Exception e) {
							// TODO Auto-generated catch block
							
							System.out.println("璇疯緭鍏ュ彉鐢电珯鍚嶇О鎴朓D锛�");
							continue;
						}
						paramList = d.getDeviceInfoList();
						break;
					}else{
						System.out.println("cime鏂囦欢涓棤姝ゅ悕绉板搴旂殑鍙樼數绔欎俊鎭紝璇疯緭鍏ュ彉鐢电珯鍚嶇О鎴朓D锛�");
					}
				}else{
					Map<String,String> subMsg=null;
					try{
					subMsg=ParseDB.getSubMsgByName(line);
					}catch(Exception e){
						System.out.println("鏁版嵁搴搖rl涓嶅瓨鍦紒");
						break;
					}
					if(subMsg.size()==1){
						Iterator it=subMsg.keySet().iterator();
						String id=it.next().toString();
						try {
							d = new DeviceInfoList(DataSourceType.DATABASE,id);
						} catch (Exception e) {
							// TODO Auto-generated catch block
							System.out.println("鏁版嵁搴撲腑鏃犳鍚嶇О瀵瑰簲鐨勫彉鐢电珯淇℃伅锛岃杈撳叆鍙樼數绔欏悕绉版垨ID锛�");
							continue;
						}
						paramList = d.getDeviceInfoList();
						break;
					}else if(subMsg.size()>1){
						System.out.println("鏁版嵁搴撲腑鏈変互涓嬪彉鐢电珯澶囬�夛細");
						Iterator it=subMsg.keySet().iterator();
						List<String> keys=new ArrayList<String>();
						int count=0;
						while(it.hasNext()){
							String key=it.next().toString();
							String value=subMsg.get(key);
							System.out.println("ID="+key+",鍚嶇О="+value+",缂栧彿="+count);
							keys.add(key);
							count++;
						}
						System.out.println("璇疯緭鍏ョ紪鍙凤細");
						//Scanner scanner2=new Scanner(System.in);
						String line2=scanner.nextLine().trim();
						try {
							d = new DeviceInfoList(DataSourceType.DATABASE,keys.get(Integer.parseInt(line2)));
						} catch (Exception e) {
							// TODO Auto-generated catch block
							System.out.println("璇疯緭鍏ュ彉鐢电珯鍚嶇О鎴朓D锛�");
							continue;
						}
						paramList = d.getDeviceInfoList();
						break;
					}else{
						System.out.println("鏁版嵁搴撲腑鏃犳鍚嶇О瀵瑰簲鐨勫彉鐢电珯淇℃伅锛岃杈撳叆鍙樼數绔欏悕绉版垨ID锛�");
					}
				}
				
			}else if(!line.trim().equals("")){
				if(source==DataSourceType.CIME){
					try {
						d = new DeviceInfoList(DataSourceType.CIME,line);
					} catch (Exception e) {
						// TODO Auto-generated catch block
						if(line.equalsIgnoreCase("adjust")){
							break;
						}else{
							System.out.println("鏂囦欢鍐呮棤姝D瀵瑰簲鐨勫彉鐢电珯淇℃伅锛岃杈撳叆鍙樼數绔欏悕绉版垨ID锛�");
						}
						continue;
					}
					paramList = d.getDeviceInfoList();
				}else{
					try {
						d = new DeviceInfoList(DataSourceType.DATABASE,line);
					} catch (Exception e) {
						// TODO Auto-generated catch block
						if(line.equalsIgnoreCase("adjust")){
							break;
						}else{
							System.out.println("鏁版嵁搴撲腑鏃犳ID瀵瑰簲鐨勫彉鐢电珯淇℃伅锛岃杈撳叆鍙樼數绔欏悕绉版垨ID锛�");
						}
						continue;
					}
					paramList = d.getDeviceInfoList();
				}
				break;
			}else{
				System.out.println("鏂囦欢鍐呮棤姝D瀵瑰簲鐨勫彉鐢电珯淇℃伅锛岃杈撳叆鍙樼數绔欏悕绉版垨ID锛�");
			}
		}
		//scanner.close();
		return paramList;
	}
	
}
